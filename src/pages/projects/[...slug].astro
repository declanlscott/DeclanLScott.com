---
import { Picture } from "astro:assets";
import { getCollection } from "astro:content";

import Layout from "~/layouts/Layout.astro";

import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";

export const getStaticPaths = (async () => {
  const projects = await getCollection("projects");

  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}) satisfies GetStaticPaths;

type Props = { project: CollectionEntry<"projects"> };

const { project } = Astro.props;

const { Content } = await project.render();
---

<Layout title={`${project.data.name} | Projects`}>
  <h1>
    <a href={project.data.url} class="flex items-center gap-4">
      <span>{project.data.name}</span>

      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="h-6 w-6"
      >
        <path d="M15 3h6v6"></path>
        <path d="M10 14 21 3"></path>
        <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
        ></path>
      </svg>
    </a>
  </h1>

  <a
    href={project.data.repo}
    target="_blank"
    class="group inline-flex items-center gap-2"
  >
    Source Code
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="h-5 w-5 transition-transform group-hover:translate-x-1.5"
    >
      <path d="M18 8L22 12L18 16"></path><path d="M2 12H22"></path>
    </svg>
  </a>

  <Picture
    src={project.data.image}
    alt={project.data.name}
    formats={["avif", "webp"]}
    transition:name={`${project.slug}-img`}
    class="rounded-lg"
  />

  <Content />
</Layout>
