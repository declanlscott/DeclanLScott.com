---
import { getCollection } from "astro:content";

import BlogPostCard from "~/components/BlogPostCard.astro";
import Layout from "~/layouts/Layout.astro";

import type { GetStaticPaths } from "astro";

export const getStaticPaths = (async () => {
  const blog = await getCollection("blog");

  const tags = blog.reduce((tags, post) => {
    post.data.tags.forEach((tag) => {
      if (!tags.includes(tag)) {
        tags.push(tag);
      }
    });

    return tags;
  }, [] as string[]);

  return tags.map((tag) => ({
    params: { slug: tag },
    props: { tag },
  }));
}) satisfies GetStaticPaths;

const blog = await getCollection("blog");

const { slug: tag } = Astro.params;

const posts = blog
  .filter((post) => post.data.isPublished)
  .filter((post) => post.data.tags.includes(tag))
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());
---

<Layout>
  <h1>{`#${tag}`}</h1>

  <a href="/blog/tags">All Tags</a>

  <p>
    {
      `${posts.length} post${posts.length === 1 ? "" : "s"} tagged with "${tag}"`
    }
  </p>

  <div class="grid grid-cols-1 gap-4 lg:grid-cols-2">
    {posts.map((post) => <BlogPostCard {post} />)}
  </div>
</Layout>
