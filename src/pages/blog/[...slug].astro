---
import { Picture } from "astro:assets";
import { getCollection } from "astro:content";

import Date from "~/components/Date.astro";
import ReadingTime from "~/components/ReadingTime.astro";
import Tags from "~/components/Tags.astro";
import Layout from "~/layouts/Layout.astro";

import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";

export const getStaticPaths = (async () => {
  const blog = await getCollection("blog");

  return blog.map((post, i) => {
    const prev = blog.slice(i + 1).find((p) => p.data.isPublished);
    const next = blog
      .slice(0, i)
      .reverse()
      .find((p) => p.data.isPublished);

    return {
      params: { slug: post.slug },
      props: { prev, post, next },
    };
  });
}) satisfies GetStaticPaths;

type Props = {
  prev?: CollectionEntry<"blog">;
  post: CollectionEntry<"blog">;
  next?: CollectionEntry<"blog">;
};

const { prev, post, next } = Astro.props;

const { Content, remarkPluginFrontmatter } = await post.render();
---

<Layout title={`${post.data.title} | Blog`}>
  <article>
    <header>
      <div class="flex items-center justify-between">
        <div class="flex gap-2 text-neutral-500 dark:text-neutral-400">
          <Date date={post.data.date} />

          <span>|</span>

          <ReadingTime
            text={remarkPluginFrontmatter.readingTimeText}
            minutes={remarkPluginFrontmatter.readingTimeMinutes}
          />
        </div>

        {
          !post.data.isPublished && (
            <div class="inline-flex items-center gap-2 rounded-full border border-amber-200 bg-amber-100 px-2.5 py-0.5 text-xs font-semibold text-amber-900 dark:border-amber-300 dark:bg-amber-200">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="h-4 w-4"
              >
                <>
                  <path d="M12 20h9" />
                  <path d="M16.5 3.5a2.12 2.12 0 0 1 3 3L7 19l-4 1 1-4Z" />
                  <path d="m15 5 3 3" />
                </>
              </svg>
              Draft
            </div>
          )
        }
      </div>

      <h1>{post.data.title}</h1>

      <Tags tags={post.data.tags} />

      <figure>
        <Picture
          src={post.data.image.src}
          alt={post.data.title}
          formats={["avif", "webp"]}
          transition:name={`${post.slug}-img`}
          class="rounded-lg"
        />
        {
          post.data.image.caption && (
            <figcaption>{post.data.image.caption}</figcaption>
          )
        }
      </figure>
    </header>

    <Content />

    <footer class="my-8 flex flex-wrap justify-between gap-4">
      <div>
        {
          prev && (
            <a
              href={`/blog/${prev.slug}`}
              class="group inline-flex items-center gap-2"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="h-5 w-5 rotate-180 transition-transform group-hover:-translate-x-1.5"
              >
                <path d="M18 8L22 12L18 16" />
                <path d="M2 12H22" />
              </svg>
              {prev.data.title}
            </a>
          )
        }
      </div>

      <div>
        {
          next && (
            <a
              href={`/blog/${next.slug}`}
              class="group inline-flex items-center gap-2"
            >
              {next.data.title}
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="h-5 w-5 transition-transform group-hover:translate-x-1.5"
              >
                <path d="M18 8L22 12L18 16" />
                <path d="M2 12H22" />
              </svg>
            </a>
          )
        }
      </div>
    </footer>
  </article>
</Layout>
