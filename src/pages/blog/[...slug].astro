---
import { Picture } from "astro:assets";
import { getCollection } from "astro:content";

import Date from "~/components/Date.astro";
import ReadingTime from "~/components/ReadingTime.astro";
import Tags from "~/components/Tags.astro";
import Layout from "~/layouts/Layout.astro";

import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";

export const getStaticPaths = (async () => {
  const blog = await getCollection("blog");

  return blog.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}) satisfies GetStaticPaths;

type Props = { post: CollectionEntry<"blog"> };

const { post } = Astro.props;

const { Content, remarkPluginFrontmatter } = await post.render();
---

<Layout title={`${post.data.title} | Blog`}>
  <article>
    <header>
      <div class="flex gap-2 text-neutral-500 dark:text-neutral-400">
        <Date date={post.data.date} />

        <span>|</span>

        <ReadingTime
          text={remarkPluginFrontmatter.readingTimeText}
          minutes={remarkPluginFrontmatter.readingTimeMinutes}
        />
      </div>

      <h1>{post.data.title}</h1>

      <Tags tags={post.data.tags} />

      <figure>
        <Picture
          src={post.data.image.src}
          alt={post.data.title}
          formats={["avif", "webp"]}
          transition:name={`${post.slug}-img`}
          class="rounded-lg"
        />
        {
          post.data.image.caption && (
            <figcaption>{post.data.image.caption}</figcaption>
          )
        }
      </figure>
    </header>

    <Content />
  </article>
</Layout>
