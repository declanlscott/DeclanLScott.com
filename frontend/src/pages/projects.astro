---
import Project from "../components/Project.astro";
import Layout from "../layouts/Layout.astro";
---

<Layout title="Projects">
  <div>
    <h1>
      <span class="font-light text-neutral-700 dark:text-neutral-300">my</span> projects
    </h1>

    <p>
      With each of my projects, I aim to accomplish two things: <strong
        >build</strong
      > something that I find useful or interesting, and <strong>learn</strong> at
      least one new technology. I believe the best way to learn and improve my skills
      is by building things. In no particular order, here are some of my projects:
    </p>

    <Project
      name="PseudoPoll"
      href="https://pseudopoll.com"
      repo="https://github.com/declanlscott/pseudopoll"
    >
      <p>
        <strong>PseudoPoll</strong> is a simple polling app with a focus on real-time
        updates and scalability. I built it to learn more about several technologies
        both on the frontend and backend of the stack. In hindsight it was probably
        too much to learn all at once, but I still had a lot of fun building it.
      </p>

      <p>
        On the backend, I learned about <strong>Amazon Web Services</strong> like
        API Gateway v1 (REST), Lambda, DynamoDB, SQS, IoT Core, EventBridge, among
        others. Following Lambda best practices, I built many single purpose functions
        to handle different parts of the application, written in <strong
          >Go</strong
        >. Persistent data is stored in DynamoDB with a single table design.
        What I think makes my project unique is the implementation of real-time
        updates. It is an event-driven system using MQTT communication over
        WebSockets with the frontend using IoT Core. For a more detailed visual
        overview, check out my
        <a
          href="https://github.com/declanlscott/pseudopoll/blob/main/architecture.png"
          target="_blank">architecture diagram</a
        > in the repo. Along with the frontend, all of this infrastructure is defined
        with <strong>Terraform</strong>.
      </p>

      <p>
        I built the frontend with <strong>Nuxt</strong> and <strong>Vue</strong
        >, which was also new to me coming from React. It really opened my eyes
        to the world of Vue and I'm excited to use it more in the future. The
        Nuxt ecosystem is really impressive and I was able to take advantage of <a
          href="https://nuxt.com/modules/ui"
          target="_blank">many</a
        >
        <a href="https://nuxt.com/modules/authjs" target="_blank">great</a>
        <a href="https://nuxt.com/modules/vue-query" target="_blank">modules</a>
        to build the app. The "back of the frontend" handles authentication with
        Google OAuth and acts as sort of a proxy to the "real" backend using the
        Backend For Frontend (BFF) pattern, all hosted on <strong
          >Cloudflare</strong
        > Pages.
      </p>
    </Project>

    <Project
      name="Fodder"
      href="https://fodder.declanlscott.com"
      repo="https://github.com/declanlscott/fodder"
    >
      <p>Fodder</p>
    </Project>

    <Project
      name="Fabtastic Painting"
      href="https://fabtastic-painting.com"
      repo="https://github.com/declanlscott/fabtastic-painting"
    >
      <p>Fabtastic Painting</p>
    </Project>

    <Project
      name="My Website"
      href="/"
      repo="https://github.com/declanlscott/declanlscott.com"
    >
      <p>My personal website (this one)</p>
    </Project>
  </div>
</Layout>
